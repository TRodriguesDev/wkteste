unit uDAOPedido;

interface

uses
  FireDAC.Comp.Client, SysUtils, uControllerConn, uMPedido;

Type
  TDAOPedido = class
    private
    protected
    public
      function selecionar : TFDQuery;
      function incluir (MPedido : TMPedido) : Boolean;
      function excluir (MPedido : TMPedido) : Boolean;
      function alterar (MPedido : TMPedido) : Boolean;
  end;


implementation

{ TMPedidos }

function TDAOPedido.alterar(MPedido: TMPedido): Boolean;
begin
  //
end;

function TDAOPedido.excluir(MPedido: TMPedido): Boolean;
var
  qryPedido : TFDQuery;
begin
  qryPedido := TControllerConn.getInstance().daoConn.novaQuery;
  Try
    try
      qryPedido.ExecSQL('DELETE FROM pedidos WHERE IDPEDIDO = :Codigo',[MPedido.IDPedido]);
      result := True;
    except
      result := False;
    end;
  Finally
    qryPedido.DisposeOf;
  End;
end;

function TDAOPedido.incluir(MPedido: TMPedido): Boolean;
var
  qryPedido : TFDQuery;
begin
  qryPedido := TControllerConn.getInstance().daoConn.novaQuery;
  Try
    try
      qryPedido.ExecSQL('INSERT INTO pedidos (DTE_PED, CLI_PED) VALUES (:DTE_PED, :CLI_PED)',[MPedido.Dte_Ped,MPedido.Cli_Ped]);
      result := True;
    except
      result := False;
    end;
  Finally
    qryPedido.DisposeOf;
  End;
end;


function TDAOPedido.selecionar: TFDQuery;
var
  qryPedido : TFDQuery;
begin
  qryPedido := TControllerConn.getInstance().daoConn.novaQuery;
  qryPedido.Open('SELECT * FROM pedidos');
  Result := qryPedido;
end;

end.
